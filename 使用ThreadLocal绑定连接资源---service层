package beyond.transfer.service;

import java.sql.Connection;
import java.sql.SQLException;

import beyond.transfer.dao.TransferDao;
import beyond.utils.DataSourceUtils;
import beyond.utils.MyDataSourceUtils;

public class TransferService {

	public boolean transfer(String out, String in, double money) {
		
		//创建dao层对象
		TransferDao dao = new TransferDao();
		
		boolean isTransferSuccess = true;
		Connection conn = null;
		try {
			//进行事务控制，开启事务
			//conn = DataSourceUtils.getConnection();
			
			//不自动开启事务，也就是手动开启事务
			//conn.setAutoCommit(false);
			
			//开启事务
			MyDataSourceUtils.startTransaction();
			
			
			//调用dao层的转出钱的方法,只需要知道 转钱的人是谁 跟 钱数 就行
			dao.out(out,money);
			
			//调用dao层的转入钱的方法,只需要知道 转给谁 跟 钱数 就行
			dao.in(in,money);
		} catch (SQLException e) {
			
			isTransferSuccess = false;
			
			try {
				//当出现事务错误，进行事务的回滚；回滚本身内部不包含提交的功能
				MyDataSourceUtils.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			e.printStackTrace();
		}finally{
			try {
				MyDataSourceUtils.commit();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		return isTransferSuccess;
		
	}
	
}
